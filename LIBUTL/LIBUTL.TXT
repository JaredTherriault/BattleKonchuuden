                                                Library Reference Release 1.0

ユーティリティ ライブラリ (libutl)
===================================


 1 関数
--------

=============================================================================
UtlChar2Bin                                                            [関数]
=============================================================================
                                   キャラクタ文字列をバイナリデータに変換する
        
[形式]
        void UtlChar2Bin (
        u_short len,
        u_char *fr_dt,
        u_short *to_dt
        )
        
[引数]
        len             文字列の長さ
        fr_dt           キャラクタ文字列
        to_dt           バイナリデータ
        
[解説]
        キャラクタ文字列をバイナリデータに変換する。
        
[返り値]
        なし

=============================================================================
UtlBin2Char                                                            [関数]
=============================================================================
                                   バイナリデータをキャラクタ文字列に変換する
        
[形式]
        void UtlBin2Char (
        u_short len,
        u_short dt_wd,
        u_char *to_dt
        )
        
[引数]
        len             文字列の長さ
        dt_wd           バイナリデータ
        to_dt           キャラクタ文字列
        
[解説]
        バイナリデータをキャラクタ文字列に変換する。
        
[返り値]
        なし

=============================================================================
UtlHexChar2Bin                                                         [関数]
=============================================================================
                             ＨＥＸキャラクタ文字列をバイナリデータに変換する
        
[形式]
        void UtlHexChar2Bin (
        u_short len,
        u_char *fr_dt,
        u_short *to_dt
        )
        
[引数]
        len             文字列の長さ
        fr_dt           ＨＥＸキャラクタ文字列
        to_dt           バイナリデータ
        
[解説]
        ＨＥＸキャラクタ文字列をバイナリデータに変換する。
        
[返り値]
        なし

=============================================================================
UtlHexBin2Char                                                         [関数]
=============================================================================
                             ＨＥＸバイナリデータをキャラクタ文字列に変換する
        
[形式]
        void UtlHexBin2Char (
        u_short len,
        u_short fr_dt,
        u_char *to_dt
        )
        
[引数]
        len             文字列の長さ
        fr_dt           ＨＥＸバイナリデータ
        to_dt           キャラクタ文字列
        
[解説]
        ＨＥＸバイナリデータをキャラクタ文字列に変換する。
        
[返り値]
        なし

=============================================================================
UtlChar2Fig                                                            [関数]
=============================================================================
                                   キャラクタ文字列をバイナリデータに変換する
        
[形式]
        void UtlChar2Fig (
        u_short len,
        u_char *fr_dt,
        u_long *to_dt
        )
        
[引数]
        len             文字列の長さ
        fr_dt           キャラクタ文字列
        to_dt           バイナリデータ [ 4 bytes ]
        
[解説]
        キャラクタ文字列をバイナリデータに変換する。
        
[返り値]
        なし

=============================================================================
UtlHexChar2Fig                                                         [関数]
=============================================================================
                             ＨＥＸキャラクタ文字列をバイナリデータに変換する
        
[形式]
        void UtlHexChar2Fig (
        u_short len,
        u_char *fr_dt,
        u_long *to_dt
        )
        
[引数]
        len             文字列の長さ
        fr_dt           ＨＥＸキャラクタ文字列
        to_dt           バイナリデータ [ 4 bytes ]
        
[解説]
        ＨＥＸキャラクタ文字列をバイナリデータに変換する。
        
[返り値]
        なし

=============================================================================
UtlFig2Char                                                            [関数]
=============================================================================
                                   バイナリデータをキャラクタ文字列に変換する
        
[形式]
        void UtlFig2Char (
        u_short len,
        u_long fr_dt,
        u_char *to_dt
        )
        
[引数]
        len             文字列の長さ
        fr_dt           バイナリデータ [ 4 bytes ]
        to_dt           キャラクタ文字列
        
[解説]
        バイナリデータをキャラクタ文字列に変換する。
        
[返り値]
        なし

=============================================================================
UtlPack2Unpack                                                         [関数]
=============================================================================
                                                         データの簡易圧縮する
        
[形式]
        void UtlPack2Unpack (
        u_short len,
        u_char *fr_dt,
        u_char *to_dt
        )
        
[引数]
        len             文字列の長さ
        fr_dt           入力データ
        to_dt           出力データ
        
[解説]
        データの簡易圧縮する。
        
[返り値]
        なし

=============================================================================
UtlUnPack2Pack                                                         [関数]
=============================================================================
                                                         データの簡易解凍する
        
[形式]
        void UtlUnpack2Pack (
        u_short len,
        u_char *fr_dt,
        u_char *to_dt
        )
        
[引数]
        len             文字列の長さ
        fr_dt           入力データ
        to_dt           出力データ
        
[解説]
        データの簡易解凍する。
        
[返り値]
        なし

=============================================================================
UtlSort                                                                [関数]
=============================================================================
                                                         データのソートをする
        
[形式]
        void UtlSort (
        u_char act,
        u_short len,
        u_char *dt
        )
        
[引数]
        act             ソート法
                        +  昇順
                        -  降順
        len             データの長さ
        dt              データ
        
[解説]
        データのソートをする
        
[返り値]
        なし

=============================================================================
UtlComp                                                                [関数]
=============================================================================
                                                           データの比較をする
        
[形式]
        u_char UtlComp (
        u_char *cmp1,
        u_char *cmp2,
        u_short cnt
        )
        
[引数]
        cmp1, cmp2      比較データ
        cnt             比較数
        
[解説]
        データの比較をする
        
[返り値]
        cmp1 = cmp2 の時、0
        cmp1 < cmp2 の時、1
        cmp1 > cmp2 の時、2
        を返す。

=============================================================================
UtlFindStr                                                             [関数]
=============================================================================
                                                           文字列の検索をする
        
[形式]
        int UtlFindStr (
        char *str1,
        char *str2
        )
        
[引数]
        str1            検索される文字列のポインター
        str2            検索する文字列のポインター
        
[解説]
        文字列の検索をする
        
[返り値]
        文字列が見つからない時、0
        文字列が見つかった時、  0以外 (先頭なら 1)
        を返す。

